# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Merges on Main Branch

on:
  push:
    branches: [ "main"]
  pull_request:
    types: [ "closed" ]
    branches: [ "main" ]

jobs:
  avoidant_redundancy:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous redundant jobs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ secrets.GH_TOKEN }}

  validar-feature:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout completo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validar que haya una URL de Trello
        run: |
          CARD_URL=$(git log -1 --pretty=%B | grep -o 'https://trello.com/c/[a-zA-Z0-9]\+' || true)
          if [ -z "$CARD_URL" ]; then
            echo "‚ùå No hay una URL de tarjeta Trello en el commit. Abortando."
          fi
        # Esto frena el workflow si no hay tarjeta.

  mover-a-done:
    needs: validar-feature
    runs-on: ubuntu-latest
    steps:
      - name: Checkout completo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Mover tarjeta a Done
        run: |
          CARD_URL=$(git log -1 --pretty=%B | grep -o 'https://trello.com/c/[a-zA-Z0-9]\+' || true)
          if [ -n "$CARD_URL" ]; then
            CARD_ID=$(echo "$CARD_URL" | cut -d '/' -f5)
            COMMIT_MSG=$(git log -1 --pretty=%s)
            AUTHOR=$(git log -1 --pretty="%an")
            COMMENT="‚úÖ Merge a main: $COMMIT_MSG ‚Äî Autor: $AUTHOR"
            curl -X POST "https://api.trello.com/1/cards/$CARD_ID/actions/comments" \
              -d "key=$TRELLO_API_KEY" \
              -d "token=$TRELLO_TOKEN" \
              -d "text=$COMMENT"
            curl -X PUT "https://api.trello.com/1/cards/$CARD_ID" \
              -d "idList=$TRELLO_LIST_ID_DONE" \
              -d "key=$TRELLO_API_KEY" \
              -d "token=$TRELLO_TOKEN"
          else
            echo "No Trello card found in commit message"
          fi
        env:
          TRELLO_API_KEY: ${{ secrets.TRELLO_API_KEY }}
          TRELLO_TOKEN: ${{ secrets.TRELLO_TOKEN }}
          TRELLO_LIST_ID_DONE: ${{ secrets.TRELLO_LIST_ID_DONE }}

  lint-build-test:
    needs: [avoidant_redundancy]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
    
    - name: Golint
      run: |
        go fmt ./...
        go vet ./...
        go install honnef.co/go/tools/cmd/staticcheck@latest
        staticcheck ./...
    
    - name: Build
      run: |
        mkdir -p dist
        GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o app .

    - name: Cargar variables de entorno para test
      run: |
        echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> $GITHUB_ENV

    - name: Test
      run: go test -v 

    - name: Send Slack Notification
      if: failure()
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      run: |
        STATUS="${{ job.status }}"
        COMMIT_MSG="${{ github.event.head_commit.message }}"
        COMMIT_AUTHOR="${{ github.event.head_commit.author.name }}"
        COMMIT_TIME="${{ github.event.head_commit.timestamp }}"
        BRANCH="${{ github.ref_name }}"
        PAYLOAD="{
          \"text\": \"üîî *Push detectado en GitHub*\nüë§ Autor: ${COMMIT_AUTHOR}\nüïí Hora: ${COMMIT_TIME}\nüåø Rama: ${BRANCH}\n‚úâÔ∏è Commit: ${COMMIT_MSG}\n\n‚ùå Estado del Job: ${STATUS}\"
        }"
        curl -X POST -H 'Content-type: application/json' --data "$PAYLOAD" "$SLACK_WEBHOOK_URL"
  
  deploy:
    needs: [lint-build-test]
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Trigger deploy in Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          curl -X POST "https://api.render.com/deploy/srv-d0vnu33ipnbc738427t0" \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Accept: application/json"

